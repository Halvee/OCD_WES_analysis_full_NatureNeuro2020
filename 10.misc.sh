#!/bin/bash

## BIN
SAMTOOLS=$PWD/bin/samtools

# make sure output dir exists
mkdir -p results/misc/

# GENERAL COHORT STATS
RUN_COHORT_STATS=1
if [[ $RUN_COHORT_STATS == 1 ]]
then

  # make output dir
  mkdir -p results/misc/cohort_stats/

  # make one single dragendb csv file
  cat data/clps_meta/ocd_samples_20190324.csv \
  > results/misc/cohort_stats/ocd_caco_20190324.csv
  tail -n+2 \
  data/clps_meta/controls_20190324.csv \
  >> results/misc/cohort_stats/ocd_caco_20190324.csv

  # combine the CSVs into one file
  cat data/clps_meta/ocd_samples_20190324.csv \
  | head -n1 \
  > results/misc/cohort_stats/ocd_caco_20190324.csv
  cat data/clps_meta/ocd_samples_20190324.csv \
      data/clps_meta/controls_20190324.csv \
  | sort \
  | uniq \
  | grep -v "^experimentID" \
  >>results/misc/cohort_stats/ocd_caco_20190324.csv

  # for each clustering based on ancestry ..
  clusters=(0 1 2 3 4 5 6 7 8 9 10)
  for i in ${clusters[@]}; do

    # make sampleped for all collapsing analysis samples
    cat data/clps_meta/cluster_${i}.caco.sampleped \
    > results/misc/cohort_stats/gene_based_collapsing.cluster_${i}.sampleped

  done
  
  # form a single sampleped file
  cat results/misc/cohort_stats/gene_based_collapsing.cluster_*.sampleped \
  > results/misc/cohort_stats/gene_based_collapsing.sampleped

  # get sampleped for LoF rate comparisons
  cat data/clps_rate/OCD_clps_rate.allcases.sampleped \
  > results/misc/cohort_stats/lof_rate_tests.sampleped

  # get trio sampleped 
  cat results/input/OCDfams_2019.cohort.trios.sampleped \
  | awk 'FNR==NR {iids[$1]=1;next}{if ($2 in iids) {print $0}}' \
    data/misc/cohort_stats/ocd_fam_iids.in_analysis.txt \
    - \
  > results/misc/cohort_stats/dnm_analysis.trios.sampleped

  # get quartet sampleped 
  cat results/input/OCDfams_2019.cohort.quartets.sampleped \
  | awk 'FNR==NR {iids[$1]=1;next}{if ($2 in iids) {print $0}}' \
    data/misc/cohort_stats/ocd_fam_iids.in_analysis.txt \
    - \
  > results/misc/cohort_stats/dnm_analysis.quartets.sampleped

  # get general stats
  bin/Rscript src/misc/cohort_full_stats.R \
  data/clps_meta/ocd_samples_20190324.csv \
  data/clps_meta/controls_20190324.csv \
  data/misc/cohort_stats/ocd_caco_20190324.prepids.txt \
  results/misc/cohort_stats/gene_based_collapsing.cluster_0.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_1.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_2.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_3.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_4.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_5.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_6.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_7.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_8.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_9.sampleped \
  results/misc/cohort_stats/gene_based_collapsing.cluster_10.sampleped \
  results/misc/cohort_stats/lof_rate_tests.sampleped \
  results/misc/cohort_stats/dnm_analysis.trios.sampleped \
  results/misc/cohort_stats/dnm_analysis.quartets.sampleped \
  results/misc/cohort_stats/cohort_full_stats \
  > results/misc/cohort_stats/cohort_full_stats.log

fi

# get qualifying variants in cases and controls in SLITRK5 
GET_QUALVAR_SLITRK5=1
if [[ $GET_QUALVAR_SLITRK5 == 1 ]]
then
 
  # make output dir
  mkdir -p results/misc/get_slitrk5_qv_csv/

  # pull down table of qualified SLITRK5 genotypes across cases + controls
  head -n1 data/clps_meta/cluster_0.lofmisd.genotypes.csv \
  | awk '{print "Cluster,"$0}' \
  | cut -d',' -f1-24,26-184 \
  > results/misc/get_slitrk5_qv_csv/ocd_collapsing.slitrk5_qv.csv
  clusters=(0 1 2 3 4 5 6 7 8 9 10)
  for i in ${clusters[@]}
  do
    j=`expr $i + 1`
    cat data/clps_meta/cluster_${i}.lofmisd.genotypes.csv \
    | grep SLITRK5 \
    | awk -v CNUM="Cluster ${i}" '{print CNUM","$0}' \
    | cut -d',' -f1-24,26-184 \
    | sed 's/_as_fake_exome//g' \
    >>results/misc/get_slitrk5_qv_csv/ocd_collapsing.slitrk5_qv.csv
  done

fi

SLITRK5_MISSENSE_CONSTRAINT=1
if [[ $SLITRK5_MISSENSE_CONSTRAINT == 1 ]]
then
  
  # make output dir
  mkdir -p results/misc/slitrk5_missense_constraint/

  # analysis of slitrk5 missense constraint using additional 
  # annotation csv generated by atav
  bin/Rscript \
  src/misc/SLITRK5_missense_constraint.R \
  results/misc/get_slitrk5_qv_csv/ocd_collapsing.slitrk5_qv.csv \
  misc_atav_jobs/slitrk5_missense_annotation/lva/2021-03-08_21-50-37_lva_annotations.csv \
  results/misc/slitrk5_missense_constraint/ocd_collapsing.slitrk5_qv.mis_ann.csv \
  results/misc/slitrk5_missense_constraint/slitrk5_missense_constraint.csv \
  results/misc/slitrk5_missense_constraint/slitrk5_missense_constraint.pdf \
  > results/misc/slitrk5_missense_constraint/slitrk5_missense_constraint.log

fi

# make files needed for IGV plots
RUN_CLPS_IGV=1
if [ $RUN_CLPS_IGV == 1 ]
then

  PARENTDIR=$PWD

  # make sure output dir exists
  mkdir -p results/misc//igv/collapsing_SLITRK5/
  # create required files for igv
  CLPS_CA_DRAGENDB_CSV=$PWD/data/misc/igv/ocd_samples_20190324.csv
  CLPS_SAMPLEPED=$PWD/data/misc/igv/OCD_casectrl_collapsing_201903.sampleselect.ALL.sampleped

  # make sure output dir exists
  mkdir -p $PWD/results/misc/igv/collapsing_SLITRK5/

  # create required files for igv
  bin/Rscript src/misc/cases_build_igv.R \
  collapsing_SLITRK5 \
  $CLPS_SAMPLEPED \
  $CLPS_CA_DRAGENDB_CSV \
  $PWD/data/misc/igv/collapsing.SLITRK5_OCD_vars_to_inspect.txt \
  $SAMTOOLS \
  $PWD/results/misc/igv/collapsing_SLITRK5/

  # generate small alignment files to be analyzed using IGV batch script
  cd results/misc/igv/collapsing_SLITRK5/
  bash collapsing_SLITRK5.samtools.sh \
  > collapsing.samtools.out \
  2> collapsing.samtools.err
  cd $PARENTDIR

fi

# make lollipop plot for SLITRK5
MAKE_SLITRK5_LOLLIPOP_PLOT=1
if [[ $MAKE_SLITRK5_LOLLIPOP_PLOT == 1 ]]
then
  
  # make output dir
  mkdir -p results/misc/SLITRK5_lollipop_plot/

  # make lollipop plot
  ../src/lollipops-v1.5.2-linux64/lollipops \
  -w=600 -legend -mut-color="#0000ff" \
  -o=results/misc/SLITRK5_lollipop_plot/SLITRK5_lollipop_plot.unformatted.svg \
  SLITRK5 Met18fs Leu86Phe Ile244Phe Pro371His Thr376Pro \
  Gly547Glu Asp550Glu Ser659Leu Arg691Leu Asp778His Gln796_Gln797dup

fi

# make CSV file that highlights 'interesting DNM calls in the data
# (ex: LoF or misD in neurodevelopmental genes)
MAKE_INTERESTINGDNM_CSV=1
if [[ $MAKE_INTERESTINGDNM_CSV == 1 ]]
then

  # make output csv
  mkdir -p results/misc/notable_dnms/

  # make table of notable DNMs
  bin/Rscript src/misc/make_interesting_dnm_table.R \
  results/input/gnomad.v2.1.1.loeuf_bins.tsv \
  results/input/MPCgt2.varlist.gz \
  results/input/NDD.n187.geneset \
  results/input/TS.ge2_dmg_DNMs_q_lt30.geneset \
  results/dnm_casectrl/OCDfams_2019.cohort.trios.10x.ppn2hdiv.inkits.cdnm \
  results/dnm_casectrl/OCDfams_2019.cohort.quartets.10x.ppn2hdiv.inkits.cdnm \
  results/dnm_casectrl/Cappi_etal_2019_OCD.DNMs.ppn2hdiv.inkits.cdnm \
  results/misc/notable_dnms/OCD.trios_quartets.notable_DNMs.csv \
  > /dev/null \
  2> /dev/null

fi
